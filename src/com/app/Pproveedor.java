/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app;

import OtrasClases.CellRenderer;
import com.entidades.Articulo;
import com.entidades.Cliente;
import com.entidades.Proveedor;
import java.util.Enumeration;
import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.hibernate.Query;
import org.hibernate.Session;
import util.HibernateUtil;

/**
 *
 * @author Geek
 */
public class Pproveedor extends javax.swing.JPanel {

    /**
     * Creates new form pVentas
     */
    public Pproveedor() {
        initComponents();
         hibernateSession();
         setCellRender(jTable1);
         arranque();
    }

    public void setCellRender(JTable table) {
        Enumeration<TableColumn> en = table.getColumnModel().getColumns();
        while (en.hasMoreElements()) {
            TableColumn tc = en.nextElement();
            tc.setCellRenderer(new CellRenderer());
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 =  new javax.swing.JTable(){ public boolean isCellEditable(int rowIndex, int colIndex) {
            return false; //Disallow the editing of any cell
        }};
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Comfortaa", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("Visualice la informacion de nuestros proveedores. . .");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "id", "Nombre", "Telefono", "Direccion", "NIT", "Contacto"
            }
        ));
        jTable1.setToolTipText("Clientes");
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Comfortaa", 0, 14)); // NOI18N
        jLabel2.setText("Proveedor:");

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setFont(new java.awt.Font("Comfortaa", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 153));
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/compras_1.png"))); // NOI18N
        jLabel4.setText("+ Agregar Proveedor");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jTextField1)
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4))
                    .addComponent(jLabel2)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 843, Short.MAX_VALUE))
                .addGap(27, 27, 27))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(22, 22, 22)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 847, Short.MAX_VALUE))
                    .addGap(24, 24, 24)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(531, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(jLabel1)
                    .addGap(102, 102, 102)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 499, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(13, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        if (this.jTextField1.getText().isEmpty()) {
            tableModel();
            cargarTabla();

        }else{
            tableModel();
            busquedaClientes(this.jTextField1.getText());
        }
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        ProveedorApp pr = new ProveedorApp(new Principal(), true);
        pr.setModal(true);
        pr.setVisible(true);
        arranque();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount()==2){
            //Se obtiene la fila seleccionada
            int selectedRow = this.jTable1.getSelectedRow();
            //Se obtiene el "id" del registro que esta en la columna "0"
            int idProv = Integer.parseInt(String.valueOf(model.getValueAt(selectedRow, 0)));
            ProveedorApp pr = new ProveedorApp(idProv, new Principal(), true);
            pr.setModal(true);
            pr.setVisible(true);
            arranque();

        }
    }//GEN-LAST:event_jTable1MouseClicked

      private Session st;
    private DefaultTableModel model;
        private void hibernateSession(){
    st = HibernateUtil.getSessionFactory().openSession();
    }
    
    private void arranque(){
    hibernateSession();
    tableModel();
    cargarTabla();
    
}
    public void tableModel(){
    this.jTable1.getColumnModel().getColumn(0).setMinWidth(0);
    this.jTable1.getColumnModel().getColumn(0).setMaxWidth(0);
    this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(0);
    this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(40);
    this.jTable1.getColumnModel().getColumn(2).setPreferredWidth(40);
    this.jTable1.getColumnModel().getColumn(3).setPreferredWidth(40);
    this.jTable1.getColumnModel().getColumn(4).setPreferredWidth(40);
    this.jTable1.getColumnModel().getColumn(5).setPreferredWidth(40);
    model = (DefaultTableModel)this.jTable1.getModel();
    model.setNumRows(0);
}
    public void cargarTabla(){
    List<Proveedor> lista = (List<Proveedor>)st.createQuery("From Proveedor a order by a.des").list();
    for(Proveedor proveedorList : lista){
        model.addRow(new Object[]{
           proveedorList.getId(), proveedorList.getDes(), proveedorList.getTel(),  proveedorList.getDir(), proveedorList.getNit(), proveedorList.getCorreo()});
    }
}
    private void busquedaClientes(String nombre){
         Query q = st.getNamedQuery("Proveedor.findBydes");
         q.setString("descripcion", nombre+"%");
         List<Proveedor> lista = q.list();
            for(Proveedor proveedorList : lista){
                model.addRow(new Object[]{
                    proveedorList.getId(), proveedorList.getDes(), proveedorList.getTel(),  proveedorList.getDir(), proveedorList.getNit(), proveedorList.getCorreo()});
            }
    }
//    private void busquedaClientesApellido(String nombre){
//         Query q = st.getNamedQuery("Cliente.findByruc");
//         q.setString("apellido", nombre+"%");
//         List<Cliente> lista = q.list();
//            for(Cliente clienteList : lista){
//                model.addRow(new Object[]{
//                    clienteList.getDes(), clienteList.getRuc()});
//            }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
