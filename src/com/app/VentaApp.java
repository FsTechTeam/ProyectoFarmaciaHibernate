/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * VentaApp.java
 *
 * Created on 09/11/2012, 02:18:20 PM
 */
package com.app;

import com.entidades.Articulo;
import com.entidades.Cliente;
import com.entidades.Funcionario;
import com.entidades.Tipo;
import com.entidades.VentaCab;
import com.entidades.VentaDet;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.hibernate.Query;
import org.hibernate.Session;
import util.HibernateUtil;

/**
 *
 * @author Geek
 */
public class VentaApp extends javax.swing.JDialog {

    /** Creates new form VentaApp */
    public VentaApp(java.awt.Frame parent, boolean modal) {
       super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        hibernateSession();
        arranque();
        nuevo();
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.jPanel4.setEnabled(false);
        this.idArt.setVisible(false);
        this.desArt.setVisible(false);
        this.id.setVisible(false);
        this.idClie.setVisible(false);

    }
    
    static Principal prin = new Principal();
    private DefaultTableModel model;
    private Session st;
    private int var,idArtt,numVenta;
   // List<Articulo>  lista = (List<Articulo>)st.createQuery("From Articulo").list();

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        nombres = new javax.swing.JTextField();
        apellidos = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ruc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnPresentacion = new org.edisoncor.gui.button.ButtonSeven();
        des = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        pve = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        can = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        cantidad = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        producto = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        eliminar = new javax.swing.JButton();
        agregar = new javax.swing.JButton();
        num = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        hora = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        totalGeneral = new javax.swing.JTextField();
        nuevo = new javax.swing.JButton();
        cancelar = new javax.swing.JButton();
        guardar = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        panelNice1 = new org.edisoncor.gui.panel.PanelNice();
        panelCurves1 = new org.edisoncor.gui.panel.PanelCurves();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        fecha = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        desArt = new javax.swing.JTextField();
        idArt = new javax.swing.JTextField();
        idClie = new javax.swing.JTextField();
        id = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ventas");
        setModal(true);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Encargado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12))); // NOI18N
        jPanel2.setEnabled(false);

        nombres.setEditable(false);
        nombres.setEnabled(false);

        apellidos.setEditable(false);
        apellidos.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 100, 340, 90));
        jPanel2.getAccessibleContext().setAccessibleName("");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 12))); // NOI18N

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel5.setText("Nombre:");

        ruc.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel7.setText("Apellido:");

        btnPresentacion.setBackground(new java.awt.Color(0, 204, 0));
        btnPresentacion.setText("+Agregar");
        btnPresentacion.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        btnPresentacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPresentacionActionPerformed(evt);
            }
        });

        des.setEditable(false);
        des.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desActionPerformed(evt);
            }
        });
        des.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                desKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(ruc, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ruc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPresentacion, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(des, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 100, 460, 90));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de Articulo"));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel9.setText("Descripcion");

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel12.setText("Precio de Venta");

        pve.setEditable(false);

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel14.setText("Stock");

        can.setEditable(false);

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel15.setText("Cantidad");

        cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cantidadKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel16.setText("Total");

        total.setEditable(false);

        producto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccionar producto" }));
        producto.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        producto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                productoItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(producto, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pve, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel12)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(can, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cantidad)
                    .addComponent(jLabel15))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cantidad))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(can, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pve, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(producto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, 610, 80));

        jTable1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Artículo", "Precio Venta", "Cantidad", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, 800, 110));

        eliminar.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Trashcan_empty.png"))); // NOI18N
        eliminar.setText("Eliminar");
        eliminar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminar.setContentAreaFilled(false);
        eliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        eliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });
        jPanel1.add(eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 210, 70, 70));

        agregar.setFont(new java.awt.Font("Century Gothic", 1, 10)); // NOI18N
        agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Tasks.png"))); // NOI18N
        agregar.setText("Agregar");
        agregar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        agregar.setContentAreaFilled(false);
        agregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        agregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarActionPerformed(evt);
            }
        });
        jPanel1.add(agregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 210, 70, 70));

        num.setEditable(false);
        num.setForeground(new java.awt.Color(0, 51, 153));
        num.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        num.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.add(num, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 40, 130, 20));

        jLabel11.setText("Q.");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 440, -1, 20));

        hora.setEditable(false);
        hora.setForeground(new java.awt.Color(0, 51, 153));
        hora.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        hora.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jPanel1.add(hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 70, 80, 20));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel13.setText("Hora:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 70, -1, 10));

        totalGeneral.setEditable(false);
        totalGeneral.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        totalGeneral.setForeground(new java.awt.Color(0, 0, 102));
        totalGeneral.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        totalGeneral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalGeneralActionPerformed(evt);
            }
        });
        jPanel1.add(totalGeneral, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 430, 160, 50));

        nuevo.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/New-file-icon-3.png"))); // NOI18N
        nuevo.setText("Nuevo");
        nuevo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevo.setContentAreaFilled(false);
        nuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoActionPerformed(evt);
            }
        });
        jPanel1.add(nuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 410, 70, 60));

        cancelar.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/delete-file-icon.png"))); // NOI18N
        cancelar.setText("Cancelar");
        cancelar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cancelar.setContentAreaFilled(false);
        cancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel1.add(cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 410, 70, 60));

        guardar.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/Save-icon.png"))); // NOI18N
        guardar.setText("Guardar");
        guardar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardar.setContentAreaFilled(false);
        guardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        guardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });
        jPanel1.add(guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 410, 70, 60));

        jLabel22.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel22.setText("Nueva Venta");
        jPanel1.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, -1, -1));

        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        jLabel21.setText("Busque el producto que desea vender, utilice los filtros de busqueda para mayor facilidad");
        jPanel1.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 50, -1, -1));
        jPanel1.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        panelNice1.setBackground(new java.awt.Color(0, 102, 153));

        jLabel17.setFont(new java.awt.Font("Comfortaa", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/principal.png"))); // NOI18N
        jLabel17.setText("Principal");
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Comfortaa", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/ventas_1.png"))); // NOI18N
        jLabel20.setText("Ventas");

        jLabel23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/img/logotitulo.png"))); // NOI18N

        fecha.setEditable(false);
        fecha.setForeground(new java.awt.Color(0, 51, 153));
        fecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fecha.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        javax.swing.GroupLayout panelCurves1Layout = new javax.swing.GroupLayout(panelCurves1);
        panelCurves1.setLayout(panelCurves1Layout);
        panelCurves1Layout.setHorizontalGroup(
            panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)
            .addGroup(panelCurves1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelCurves1Layout.createSequentialGroup()
                        .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelCurves1Layout.createSequentialGroup()
                        .addGroup(panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelCurves1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(10, 10, 10))
                            .addComponent(jLabel20))
                        .addContainerGap(54, Short.MAX_VALUE))))
        );
        panelCurves1Layout.setVerticalGroup(
            panelCurves1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCurves1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel20)
                .addGap(33, 33, 33)
                .addComponent(jLabel17)
                .addGap(103, 103, 103)
                .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        panelNice1.add(panelCurves1, java.awt.BorderLayout.PAGE_START);

        jPanel1.add(panelNice1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 220, 490));

        jLabel24.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        jLabel24.setText("Número de orden:");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 20, -1, 10));

        jLabel25.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel25.setText("Total esta venta:");
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 410, -1, 20));

        desArt.setEditable(false);
        jPanel1.add(desArt, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 50, 24, -1));

        idArt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idArtKeyPressed(evt);
            }
        });
        jPanel1.add(idArt, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 60, -1, 16));

        idClie.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idClieKeyPressed(evt);
            }
        });
        jPanel1.add(idClie, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 80, 22, 16));

        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                idKeyPressed(evt);
            }
        });
        jPanel1.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 60, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1041, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoActionPerformed
        nuevo();// Evento ActionPerformed para botón nuevo.
    }//GEN-LAST:event_nuevoActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        arranque();// Evento ActionPerformed para botón cancelar.
    }//GEN-LAST:event_cancelarActionPerformed

    private void agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarActionPerformed
       agregar();// Evento ActionPerformed para botón agregar.
        
    }//GEN-LAST:event_agregarActionPerformed

    private void idKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyPressed
        //Uso del Evento KeyPressed dentro del campo de texto "id".
        if(evt.getKeyCode()== KeyEvent.VK_ENTER){
            buscarFuncionario();
        }
    }//GEN-LAST:event_idKeyPressed

    private void idClieKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idClieKeyPressed
        //Uso del Evento KeyPressed dentro del campo de texto "idClie".
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            buscarCliente();
        }
    }//GEN-LAST:event_idClieKeyPressed

    private void idArtKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idArtKeyPressed
        //Uso del Evento KeyPressed dentro del campo de texto "idArt".
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            buscarArticulo();
        }
    }//GEN-LAST:event_idArtKeyPressed

    private void cantidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantidadKeyPressed
        //Uso del Evento KeyPressed dentro del campo de texto "cantidad".
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            calcularParcial();
        }
    }//GEN-LAST:event_cantidadKeyPressed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        eliminar();// Evento ActionPerformed para botón eliminar.
    }//GEN-LAST:event_eliminarActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        guardar();// Evento ActionPerformed para botón guardar.
//        prin.arranque();
//        prin.centrar();
    }//GEN-LAST:event_guardarActionPerformed

    
    private void totalGeneralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalGeneralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalGeneralActionPerformed

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        this.dispose();
        
    }//GEN-LAST:event_jLabel17MouseClicked

    private void btnPresentacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPresentacionActionPerformed
        // TODO add your handling code here:
        try{
        guardar2();
        }catch(Exception e){ 
            JOptionPane.showMessageDialog(null, "No se pudieron guardar los datos");
        }
    }//GEN-LAST:event_btnPresentacionActionPerformed

    private void desActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_desActionPerformed

    private void desKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_desKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            buscarClienteNombre(this.des.getText());
        }
    }//GEN-LAST:event_desKeyPressed

    private void productoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_productoItemStateChanged
        // TODO add your handling code here:
        if(producto.getSelectedIndex()>0){
           buscarArticulocom();
        }
        else{
        this.desArt.setText(null);
        this.pve.setText((null));
        this.can.setText((null));
        this.cantidad.setText(null);
        this.idArt.setText(null);
        }
    }//GEN-LAST:event_productoItemStateChanged

    DefaultComboBoxModel combomodel;

    public void cargarCombo(){
        
    hibernateSession();
    combomodel=(DefaultComboBoxModel) producto.getModel();
    combomodel.removeAllElements();
    combomodel.addElement("Selecione un producto");
    List<Articulo> lista = (List<Articulo>)st.createQuery("From Articulo").list();
    for(Articulo tipoList : lista){
        combomodel.addElement(tipoList);            
    }
    System.out.println(""+combomodel.getSize());
    producto.setModel(combomodel);
}
    public void guardar2(){
        
        if (this.des.getText().isEmpty() && this.ruc.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Rellene los campos de nombre y apellido del paciente.");
        }
        else{
       st.beginTransaction();
       Cliente clie = new Cliente();
       clie.setDes(this.des.getText());
       clie.setDir("Direccion");
       clie.setTel("77777777");
       clie.setRuc(this.ruc.getText());
       st.save(clie);
       st.getTransaction().commit();
       JOptionPane.showMessageDialog(null, "Registro de cliente guardado.");
       cargarDatos();
       this.producto.requestFocus();
      }
    }
    public void cargarDatos(){
    st.beginTransaction();
    List<Cliente> lista = (List<Cliente>)st.createQuery("From Cliente").list();
    for(Cliente clie : lista){       
        this.idClie.setText(String.valueOf(clie.getId()));
        this.des.setText(clie.getDes());
        this.ruc.setText(clie.getRuc());
    }
    
    
    
    
    
    
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentaApp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                VentaApp dialog = new VentaApp(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        prin.arranque();
//                        prin.centrar();
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton agregar;
    private javax.swing.JTextField apellidos;
    private org.edisoncor.gui.button.ButtonSeven btnPresentacion;
    private javax.swing.JTextField can;
    private javax.swing.JButton cancelar;
    private javax.swing.JTextField cantidad;
    private javax.swing.JTextField des;
    private javax.swing.JTextField desArt;
    private javax.swing.JButton eliminar;
    private javax.swing.JTextField fecha;
    private javax.swing.JButton guardar;
    private javax.swing.JTextField hora;
    private javax.swing.JTextField id;
    private javax.swing.JTextField idArt;
    private javax.swing.JTextField idClie;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField nombres;
    private javax.swing.JButton nuevo;
    private javax.swing.JTextField num;
    private org.edisoncor.gui.panel.PanelCurves panelCurves1;
    private org.edisoncor.gui.panel.PanelNice panelNice1;
    private javax.swing.JComboBox producto;
    private javax.swing.JTextField pve;
    private javax.swing.JTextField ruc;
    private javax.swing.JTextField total;
    private javax.swing.JTextField totalGeneral;
    // End of variables declaration//GEN-END:variables
public void hibernateSession(){
    st = HibernateUtil.getSessionFactory().openSession();
}
public void arranque(){
    cargarCombo();
    this.jPanel4.setEnabled(false);
    this.id.setEnabled(false);
    this.nuevo.setEnabled(true);
    this.agregar.setEnabled(false);
    this.eliminar.setEnabled(false);
    this.guardar.setEnabled(false);
    this.num.setText(null);
    this.fecha.setText(null);
    this.hora.setText(null);
    this.id.setText(null);
    this.id.setEnabled(false);
    this.nombres.setText(null);
    this.apellidos.setText(null);
    this.idClie.setText(null);
    this.idClie.setEnabled(false);
    this.des.setText(null);
    this.idArt.setText(null);
    this.idArt.setEnabled(false);
    this.desArt.setText(null);
    this.pve.setText(null);
    this.can.setText(null);
    this.cantidad.setText(null);
    this.cantidad.setEnabled(false);
    this.total.setText(null);
    this.totalGeneral.setText(null);
    this.id.setText("1");
    this.nombres.setText("Dr. Eular");
    this.apellidos.setText("Bautista");
    this.des.setText(null);
    this.ruc.setText(null);
    
    tableModel();
}
public void tableModel(){
    this.jTable1.getColumnModel().getColumn(0).setPreferredWidth(15);
    this.jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
    this.jTable1.getColumnModel().getColumn(2).setPreferredWidth(80);
    this.jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
    this.jTable1.getColumnModel().getColumn(4).setPreferredWidth(80);
    model = (DefaultTableModel)this.jTable1.getModel();
    model.setNumRows(0);
}
public void nuevo(){
    obtenetID();
    this.id.setText("1");
    this.nombres.setText("Dr. Eular");
    this.apellidos.setText("Bautista");
    this.jPanel4.setEnabled(true);
    this.id.setEnabled(false);
    this.idClie.setEnabled(true);
    this.des.setEditable(true);
    this.ruc.setEditable(true);
    this.idArt.setEnabled(true);
    this.cantidad.setEnabled(true);
    this.agregar.setEnabled(true);
    this.eliminar.setEnabled(true);
    this.guardar.setEnabled(true);
    this.nuevo.setEnabled(false);
    this.id.requestFocus();
    Calendar cal = Calendar.getInstance();
    String calString = retornarString(cal);
    String calHora = retornarStringHora(cal);
    this.fecha.setText(calString);
    this.num.setText(String.valueOf(numVenta));    
    this.hora.setText(calHora);
    this.id.setText("1");
    this.nombres.setText("Dr. Eular");
    this.apellidos.setText("Bautista");
}
public void obtenetID(){
    numVenta = 0;
    List<VentaCab> lista = (List<VentaCab>)st.createQuery("From VentaCab").list();
    for (Iterator<VentaCab> it = lista.iterator(); it.hasNext();) {
        VentaCab ventaCab = it.next();
        numVenta = ventaCab.getNum() + 1;
    }
    if(numVenta==0){
        numVenta=1;
    } 
}
public void buscarArticulo(){
    int idArti = 0;
    try {
        try {
           idArti = Integer.parseInt(this.idArt.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID debe ser numérico.");
        }
        Articulo art = (Articulo)st.load(Articulo.class, idArti);
        this.desArt.setText(art.getDes());
        this.pve.setText(String.valueOf(art.getPve()));
        this.can.setText(String.valueOf(art.getCan()));
        this.cantidad.requestFocus();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "No hay artículo con ID: " + idArti);
    }    
}

public void buscarArticulocom(){
    int idArti = 0;
    
    try {
        try {
           idArti =((Articulo)producto.getSelectedItem()).getId();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID debe ser numérico.");
        }
        Articulo art = (Articulo)st.load(Articulo.class, idArti);
        this.desArt.setText(art.getDes());
        this.pve.setText(String.valueOf(art.getPve()));
        this.can.setText(String.valueOf(art.getCan()));
        this.cantidad.requestFocus();
        this.idArt.setText(""+idArti);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "No hay artículo con ID: " + idArti);
    }    
}




public void calcularParcial(){
    int canVent = 0;
    double pVenta = 0;
    int stock = 0;
    double totalParcial = 0 ;
    try {
        canVent = Integer.parseInt(this.cantidad.getText());
        pVenta = Double.parseDouble(this.pve.getText());
        stock = Integer.parseInt(this.can.getText());
        if(stock < canVent){
             JOptionPane.showMessageDialog(null, "Stock insuficiente.");
        }
        else{
           totalParcial = canVent * pVenta;
           this.total.setText(String.valueOf(totalParcial)); 
           this.agregar.requestFocus();
        }
        
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Se requiere datos numérico.");
    }
}
public void buscarFuncionario(){
    int idFunc = 0;
    try {
        try {
           idFunc = Integer.parseInt(this.id.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID debe ser numérico.");
        }
         Funcionario funcio = (Funcionario)st.load(Funcionario.class, idFunc);
         this.nombres.setText(funcio.getNombres());
         this.apellidos.setText(funcio.getApellidos());
         this.idClie.requestFocus();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "No hay funcionario con ID: " + idFunc);
    }    
}
public void buscarCliente(){
    int idCl = 0;
    try {
        try {
           idCl = Integer.parseInt(this.idClie.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "ID debe ser numérico.");
        }
         Cliente clie = (Cliente)st.load(Cliente.class, idCl);
         this.des.setText(clie.getDes());
         this.ruc.setText(clie.getRuc());
         this.idArt.requestFocus();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "No hay cliente con ID: " + idCl);
    }    
}
public void buscarClienteNombre(String nombre){
   
    
    List<Cliente> lista = (List<Cliente>)st.createQuery("a From Cliente where a.des ="+nombre+"").list();
    for(Cliente tipoList : lista){
        this.des.setText(tipoList.getDes());
        this.ruc.setText(tipoList.getRuc());
        this.idClie.setText(String.valueOf(tipoList.getId()));
        
    }   
    cargarDatos();
}

public void agregar(){
    if(this.id.getText().isEmpty()){
        //JOptionPane.showMessageDialog(null, "Seleccione un funcionario.");
        this.id.setText("0");
    }
    else{
        if(this.des.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Ingrese un nombre de paciente.");
        }
        else{
            if(this.idArt.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Seleccione un articulo.");
            }
            else{
                if(this.cantidad.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null, "Indique una cantidad.");
                }
                else{
                    verificar();
                    if(var>=1){
                        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Artículo ya Agregado. Desea sumar la cantidad.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
                        if(showConfirmDialog==0){
                           sumarRepetido(); 
                           calcular();
                           confimAgregar();
                           limpiar();
                        }
                        else{
                            limpiar();
                            this.idArt.requestFocus();
                        }
                    }
                    else{
                            model.addRow(new Object[]{
                            this.idArt.getText(),this.desArt.getText(),this.pve.getText(),this.cantidad.getText(),this.total.getText()
                            });                    
                            calcular();
                            confimAgregar();
                            limpiar(); 
                    }
                    
                }
            }
        }
    }
}
public void confimAgregar(){
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Agregar más Articulos.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
        if(showConfirmDialog == 0){
            this.producto.requestFocus();
        }
        else{
            this.guardar.requestFocus();
        }
        
}
public void limpiar(){
    this.idArt.setText(null);
    this.desArt.setText(null);
    this.pve.setText(null);
    this.can.setText(null);
    this.cantidad.setText(null);
    this.total.setText(null);
    this.id.setEnabled(false);
    this.idClie.setEnabled(false);
    
}
public void calcular(){
    double totalG = 0;
    for (int i = 0; i < this.jTable1.getRowCount(); i++) {
        Object valueAt = model.getValueAt(i, 4);
        totalG += Double.parseDouble(valueAt.toString());
    }
    this.totalGeneral.setText(String.valueOf(totalG));
}
public void verificar(){
    var = 0;
    int idAr = Integer.parseInt(this.idArt.getText());
    if(this.jTable1.getRowCount()>=1){
        for (int i = 0; i < this.jTable1.getRowCount(); i++) {
        Object valueAt = model.getValueAt(i, 0);
        int parseInt = Integer.parseInt(valueAt.toString());
        if(idAr == parseInt){
            var = 1;
            idArtt = i;
        }        
        }        
    }  
}
public void sumarRepetido(){
        int artCant = Integer.parseInt(this.cantidad.getText());
        double artTotal = Double.parseDouble(this.total.getText());
        Object valueAt = model.getValueAt(idArtt, 3);
        Object valueAt1 = model.getValueAt(idArtt, 4);
        int cantArt = Integer.parseInt(valueAt.toString());
        double totalArt = Double.parseDouble(valueAt1.toString());
        int x = artCant + cantArt;
        double y = artTotal + totalArt;
        int t = Integer.parseInt(this.can.getText());
        if(t>=x){
            model.setValueAt(x, idArtt, 3);
            model.setValueAt(y, idArtt, 4);
        }
        else{
           JOptionPane.showMessageDialog(null, "Stock de artículos insuficiente."); 
        }
        
}

public String retornarString(Calendar fecha){
        String retorno=null;
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        if (fecha != null) {
        retorno = sdf.format(fecha.getTime());
        }
        return retorno;
}
public String retornarStringHora(Calendar fecha){
        String retorno=null;
        SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
        if (fecha != null) {
        retorno = sdf.format(fecha.getTime());
        }
        return retorno;
}    
public Calendar retornarCalendar(String fecha){
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Calendar cal = Calendar.getInstance();    
        try {
            cal.setTime(sdf.parse(fecha));
        } catch (ParseException ex) {
          JOptionPane.showMessageDialog(null, "Error; compruebe formato de fecha: " + ex);  
        }
        return cal;
    }
public void eliminar(){
    if(this.jTable1.getSelectedRow()==-1){
      JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila de la tabla.");  
    }
    else{
        int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Eliminar fila seleccionada.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
        if(showConfirmDialog == 0){
            int sel = this.jTable1.getSelectedRow();
            model.removeRow(sel);
            this.idArt.requestFocus();
        }
        else{
            this.idArt.requestFocus();
        }
    }
}
public void guardar(){
    if(this.id.getText().isEmpty() ||this.idClie.getText().isEmpty() ){
        JOptionPane.showMessageDialog(null, "Faltan datos para guardar. Verifique.");
    }
    else{
        if(this.jTable1.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No hay datos para guardar.");
        }
        else{
            int showConfirmDialog = JOptionPane.showConfirmDialog(null, "Desea guardar esta venta.", "Mensaje del Sistema.", JOptionPane.YES_NO_OPTION);
            if(showConfirmDialog == 0){
                try {
                    st.beginTransaction();
                    VentaCab venta = new VentaCab();
                    int idFun = Integer.parseInt(this.id.getText());
                    int idCli = Integer.parseInt(this.idClie.getText());
                    double totalVenta = Double.parseDouble(this.totalGeneral.getText());
                    Funcionario funcionario = (Funcionario)st.load(Funcionario.class, idFun);
                    Cliente cliente = (Cliente)st.load(Cliente.class, idCli);
                    Calendar fechaVenta = retornarCalendar(this.fecha.getText());
                    String horaVenta = this.hora.getText();
                    venta.setCliente(cliente);
                    venta.setFuncionario(funcionario);
                    venta.setFecha(fechaVenta);
                    venta.setHora(horaVenta);
                    venta.setTotal(totalVenta);
                    funcionario.getVentaCabs().add(venta);
                    cliente.getVentaCabs().add(venta);
                    int rowCount = this.jTable1.getRowCount();
                    int[] idArti = new int[rowCount];
                    int[] cantVenta = new int[rowCount];
                    for (int i = 0; i < this.jTable1.getRowCount(); i++) {
                        VentaDet detalleVenta = new VentaDet();
                        int idArticulo = Integer.parseInt(String.valueOf(model.getValueAt(i, 0)));
                        idArti[i] = idArticulo;
                        Articulo ventaArticulo = (Articulo)st.load(Articulo.class, idArticulo);
                        int cantidadVenta = Integer.parseInt(String.valueOf(model.getValueAt(i, 3)));
                        cantVenta[i]= cantidadVenta;
                        double importeVenta = Double.parseDouble(String.valueOf(model.getValueAt(i, 4)));
                        detalleVenta.setArticulo(ventaArticulo);
                        detalleVenta.setCant(cantidadVenta);
                        detalleVenta.setImporte(importeVenta);
                        detalleVenta.setVentaCab(venta);
                        venta.getVentaDets().add(detalleVenta);
                    }
                    st.save(venta);
                    st.getTransaction().commit();
                    for (int i = 0; i < idArti.length; i++) {
                        actualizarStrock(cantVenta[i], idArti[i]);
                    }
                    arranque();
                    JOptionPane.showMessageDialog(null, "Venta guardada correctamente.");
                    this.dispose();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Error guardando venta. Verifique.");
                }
                
            }
            else{                
                this.idArt.requestFocus();
            }
            
        }
    }
}
public void actualizarStrock(int cantidadVendida, int idArticulo){
    st.beginTransaction();
    Articulo actualizar = (Articulo)st.load(Articulo.class, idArticulo);
    int temp = actualizar.getCan() - cantidadVendida;
    actualizar.setCan(temp);
    st.update(actualizar);
    st.getTransaction().commit();
}
}
